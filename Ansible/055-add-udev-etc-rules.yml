---
# ###########################################################
# Ansible playbook for a SDRPlay+OpenWebRx listening post
# part 055 - add some extra rules for udev
#
# (origin and copyleft) - es1lau
# last modified - 2019-07-28
# version? likely around 0.7
# ###########################################################
# --- Some implementation notes
# According to my vague memories, I had some issues with SDRPlay 2.1.1
# But which ones?
#  66-mirics.rules
#    SUBSYSTEM=="usb",ENV{DEVTYPE}=="usb_device",ATTRS{idVendor}=="1df7",ATTRS{idProduct}=="3000",MODE:="0666"
# --------------------^--------------------------^-----------------------^------------------------^---^
#   it would be more readable with spaces. And then, colon is not used by udev syntax.
# vs
#    # 2018-06-04
#    #
#    # SUBSYSTEM=="usb", ATTRS{idVendor}=="1d7f", ATTRS{idProduct}=="3000", GROUP="air", MODE="0666", SYMLINK+="sdrplay"
#
# Ideas - a) substitute commas wit comma+space ; b) delete colon from MODE statement
# ------------
# Realtek is my particular third device
# put into /etc/udev/rules.d/20.rtlsdr.rules this as of 2018-06-04
#     SUBSYSTEM=="usb", ATTRS{idVendor}=="0bda", ATTRS{idProduct}=="2838", GROUP="air", MODE="0666", SYMLINK+="rtl_sdr"
# ###########################################################
#
- hosts: hamradio
  become: yes
  become_method: su
  become_user: root
  vars:
    sdrplay_filename: "/etc/udev/rules.d/66-mirics.rules"
    rtlsdr_filename: "/etc/udev/rules.d/67-rtlsdr.rules" # order
    soapy_sysctl_filename: "/etc/sysctl.d/10-SoapyRemote.conf"
    mem_max_value: "104857600" # a certain sysctl value for radio host
    security_limits_filename: "/etc/security/limits.conf"
  tasks:

# ------ STEP 1 - fiddling with SDRPlay udev rules syntax
#
    - name: verify the value of 66-mirics.rules before changing it
      command: "grep 3000 {{ sdrplay_filename }}"
      register: udev_excerpt_3000
#
    - debug: msg="{{ udev_excerpt_3000.stdout }}"
#
#  ######### Actual editing omitted while learning fileinline #####

    - name: verify the 66-mirics.rules after editing
      command: "grep 3000 {{ sdrplay_filename }}"
      register: udev_excerpt
#
    - debug: msg="{{ udev_excerpt.stdout }} "
#
# ------- STEP 2 - creating a new udef file for RTL-SDR
#
    - name: create a suitable RTL-SDR udev file
      lineinfile:
        owner: root
        group: root
        mode: '0644'
        dest: "{{ rtlsdr_filename }}"
        line: 'SUBSYSTEM=="usb", ATTRS{idVendor}=="0bda", ATTRS{idProduct}=="2838", GROUP="air", MODE="0666", SYMLINK+="rtl_sdr"'
        create: yes
        state: present
#
# ------- STEP 3
#
# Have to do it with_items but no suxxess so far
# "ERROR! 'item_dest' is undefined"
#
    - name: create a suitable Soapy sysctl file
      lineinfile:
        owner: root
        group: root
        mode: '0644'
        dest: "{{ soapy_sysctl_filename }}"
        line: "# {{ ansible_date_time.iso8601 }} added by Ansible for pothosware SoapyRemote"
        create: yes
        state: present
# Haha - repeated launches will create repeated comments ... at least not dangerous

    - name: add line 2 to Soapy sysctl file
      lineinfile:
        dest: "{{ soapy_sysctl_filename }}"
        line: "# "
        state: present

    - name: add line 3 to Soapy sysctl file
      lineinfile:
        dest: "{{ soapy_sysctl_filename }}"
        line: "net.core.rmem_max = {{ mem_max_value }} "
        state: present

    - name: add line 4 to Soapy sysctl file
      lineinfile:
        dest: "{{ soapy_sysctl_filename }}"
        line: "net.core.wmem_max = {{ mem_max_value }} "
        state: present
#
    - name: verify the sysctl amendments after editing
      command: 'cat  {{ soapy_sysctl_filename }}'
      register: sysctl_excerpt
#
    - debug: msg="{{ sysctl_excerpt.stdout }}"
#

# ------- STEP 4
#
    - name: change security limits conf for user air
      lineinfile:
        owner: root
        group: root
        mode: '0644'
        dest: "{{ security_limits_filename }}"
        line: '# 2018-06-04 by Ansible for pothosware SoapyRemote'
        create: yes
        state: present

    - name: add line 2 to limits conf
      lineinfile:
        dest: "{{ security_limits_filename }}"
        line: 'air hard rtprio 99'
        create: yes
        state: present

    - name: verify the sysctl amendments after editing
      command: "grep air {{ security_limits_filename }}"
      register: limits_excerpt
    - debug: msg="{{ limits_excerpt.stdout }}"

    - debug: msg="Mr Ansible Operator, now its time for a reboot to update the kernel behaviour"

# ------- STEP 5

# Now the modules BLACKLISTING part
# that should be done by a sudo capable user.
#
# -------------
# vi /etc/modprobe.d/blacklist-rtlsdr.conf
#
# add
#   blacklist dvb_usb_rtl28xxu
# to there
#
#
# then vi /etc/modprobe.d/blacklist-sdrplay.conf
#
# and add
#   blacklist sdr_msi3101
#   blacklist msi001
#   blacklist msi2500
# to there.
# =================================================

# Instructions for understanding
# - https://github.com/pothosware/SoapyRemote/wiki
# - http://www.instructables.com/id/rtl-sdr-on-Ubuntu/
# - https://wwwx.cs.unc.edu/~sparkst/howto/network_tuning.php
#
...
